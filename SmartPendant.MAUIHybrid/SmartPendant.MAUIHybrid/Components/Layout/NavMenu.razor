@inject NavigationManager Navigation
@implements IDisposable

@if (IsMobile)
{
    <MudStack Row Justify="Justify.SpaceAround" Style="width:100%">
        <MudIconButton Href="/" 
                       Icon="@Icons.Material.Filled.Home" 
                       Color="Color.Inherit" 
                       Size="Size.Medium"
                       Style="@GetButtonStyle("/")" />
        <MudIconButton Href="/tasks"
                       Icon="@Icons.Material.Filled.Dashboard"
                       Color="Color.Inherit"
                       Size="Size.Medium"
                       Style="@GetButtonStyle("/dashboard")" />
        <MudIconButton Href="/history" 
                       Icon="@Icons.Material.Filled.History" 
                       Color="Color.Inherit" 
                       Size="Size.Medium"
                       Style="@GetButtonStyle("/history")" />
        <MudIconButton Href="/impact" 
                       Icon="@Icons.Material.Filled.LightMode" 
                       Color="Color.Inherit" 
                       Size="Size.Medium"
                       Style="@GetButtonStyle("/impact")" />
    </MudStack>
}
else
{
    <MudNavMenu Color="Color.Primary" Margin="Margin.Normal">
        <MudNavLink Href="/" Icon="@Icons.Material.Filled.Home" Match="NavLinkMatch.All">Home</MudNavLink>
        <MudNavLink Href="/dashboard" Icon="@Icons.Material.Filled.Dashboard">Tasks</MudNavLink>
        <MudNavLink Href="/history" Icon="@Icons.Material.Filled.History">History</MudNavLink>
        <MudNavLink Href="/impact" Icon="@Icons.Material.Filled.LightMode">Impact</MudNavLink>
    </MudNavMenu>
}

@code {
    [Parameter] public bool IsMobile { get; set; } = false;

    protected override void OnInitialized()
    {
        Navigation.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        StateHasChanged();
    }

    private string GetButtonStyle(string href)
    {
        var currentPath = new Uri(Navigation.Uri).AbsolutePath;
        
        // Check if current path matches the href
        bool isActive = string.Equals(currentPath, href, StringComparison.OrdinalIgnoreCase);
        
        return isActive ? "background: var(--mud-palette-primary-hover);" : "";
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= OnLocationChanged;
    }
}