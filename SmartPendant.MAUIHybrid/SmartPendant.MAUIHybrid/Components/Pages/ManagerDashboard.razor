@page "/manager-dashboard"

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="py-6">
    <MudStack Spacing="4">
        <MudStack Spacing="1" AlignItems="AlignItems.Center" Justify="Justify.Center">
            <MudText Typo="Typo.h4" GutterBottom="true"><b>Manager Dashboard</b></MudText>
            <MudText Typo="Typo.body1" Class="mud-text-secondary">Unit-Wide Insights for Medical/Surgical Floor 3B</MudText>
        </MudStack>

        @* Filter section *@
        <MudPaper Class="pa-4 d-flex align-center flex-wrap" Elevation="2">
            <MudText Class="mr-4"><b>Date Range:</b></MudText>
            <MudDateRangePicker @ref="_picker" Label="Filter by Date" PickerVariant="PickerVariant.Dialog" />
        </MudPaper>

        @* KPI Cards Section *@
        <MudGrid Spacing="4">
            <MudItem xs="12" sm="6" md="3">
                <MudPaper Class="pa-4" Elevation="3">
                    <MudStack Spacing="1">
                        <MudText Typo="Typo.body2" Class="mud-text-secondary">CarePulse Engagement</MudText>
                        <MudText Typo="Typo.h5"><b>92%</b></MudText>
                        <MudText Typo="Typo.caption" Style="color: var(--mud-palette-success);">+3% vs last period</MudText>
                    </MudStack>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudPaper Class="pa-4" Elevation="3">
                    <MudStack Spacing="1">
                        <MudText Typo="Typo.body2" Class="mud-text-secondary">Patient Education Focus</MudText>
                        <MudText Typo="Typo.h5"><b>14%</b></MudText>
                        <MudText Typo="Typo.caption" Style="color: var(--mud-palette-success);">+1.5% vs last period</MudText>
                    </MudStack>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudPaper Class="pa-4" Elevation="3">
                    <MudStack Spacing="1">
                        <MudText Typo="Typo.body2" Class="mud-text-secondary">Collaboration Rate</MudText>
                        <MudText Typo="Typo.h5"><b>9%</b></MudText>
                        <MudText Typo="Typo.caption" Style="color: var(--mud-palette-error);">-0.5% vs last period</MudText>
                    </MudStack>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudPaper Class="pa-4" Elevation="3">
                    <MudStack Spacing="1">
                        <MudText Typo="Typo.body2" Class="mud-text-secondary">Positive Patient Sentiment</MudText>
                        <MudText Typo="Typo.h5"><b>96%</b></MudText>
                        <MudText Typo="Typo.caption" Style="color: var(--mud-palette-success);">Maintained</MudText>
                    </MudStack>
                </MudPaper>
            </MudItem>
        </MudGrid>

        @* Charts Section *@
        <MudGrid Spacing="4">
            <MudItem xs="12" lg="5">
                <MudPaper Class="pa-12" Elevation="3">
                    <MudText Typo="Typo.h6" GutterBottom="true" Class="mb-4"><b>Unit-Wide Domain Distribution</b></MudText>
                    @if (_domainData?.Any() == true)
                    {
                        <div style="width: 100%; height: 350px; display: flex; justify-content: center; align-items: center;">
                            <MudChart ChartType="ChartType.Donut"
                                      @bind-SelectedIndex="DomainChartIndex"
                                      InputData="@_domainData"
                                      InputLabels="@_domainLabels"
                                      Width="350px"
                                      Class="mt-8"
                                      Height="300px" />
                        </div>
                        @if (DomainChartIndex >= 0 && DomainChartIndex < _domainLabels.Length)
                        {
                            <MudText Typo="Typo.body2" Class="text-center mt-2">
                                Selected: @_domainLabels[DomainChartIndex] (@_domainData[DomainChartIndex]%
                            </MudText>
                        }
                    }
                    else
                    {
                        <div style="width: 100%; height: 350px; display: flex; justify-content: center; align-items: center;">
                            <MudText>Loading chart data...</MudText>
                        </div>
                    }
                </MudPaper>
            </MudItem>
            <MudItem xs="12" lg="7">
                <MudPaper Class="pa-12" Elevation="3">
                    <MudText Typo="Typo.h6" GutterBottom="true" Class="mb-4"><b>Domain Focus by Shift</b></MudText>
                    @if (_shiftSeries?.Any() == true)
                    {
                        <div style="width: 100%; height: 350px;">
                            <MudChart ChartType="ChartType.Bar"
                                      ChartSeries="_shiftSeries"
                                      @bind-SelectedIndex="ShiftChartIndex"
                                      XAxisLabels="@_shiftXAxisLabels"
                                      ChartOptions="@_shiftOptions"
                                      Width="100%"
                                      Height="350px" />
                        </div>
                    }
                    else
                    {
                        <div style="width: 100%; height: 350px; display: flex; justify-content: center; align-items: center;">
                            <MudText>Loading chart data...</MudText>
                        </div>
                    }
                </MudPaper>
            </MudItem>
        </MudGrid>

        @* Key Drivers Table *@
        <MudPaper Class="pa-4" Elevation="3">
            <MudText Typo="Typo.h6" GutterBottom="true"><b>Key Nursing Drivers of Positive Outcomes</b></MudText>
            <MudSimpleTable Hover="true" FixedHeader="true" Style="height: 250px;">
                <thead>
                    <tr>
                        <th>Patient Outcome</th>
                        <th>Primary Nursing Domain Driver</th>
                        <th>Impact Correlation</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var driver in _drivers)
                    {
                        <tr>
                            <td>@driver.Outcome</td>
                            <td>@driver.Domain</td>
                            <td>
                                <MudButton Color="@driver.CorrelationColor" Size="Size.Small" Variant="Variant.Filled">
                                    @driver.Correlation
                                </MudButton>
                            </td>
                        </tr>
                    }
                </tbody>
            </MudSimpleTable>
        </MudPaper>

    </MudStack>
</MudContainer>

@code {
    private MudDateRangePicker? _picker;
    private int ShiftChartIndex = -1; // -1 = no selection
    private int DomainChartIndex = -1; // -1 = no selection for donut chart

    // Data for the Donut Chart (Unit-Wide Domain Distribution) - using InputData/InputLabels approach
    private double[] _domainData = Array.Empty<double>();
    private string[] _domainLabels = Array.Empty<string>();

    // Data for the Bar Chart (Shift Comparison) - keeping ChartSeries approach
    private string[] _shiftXAxisLabels = { "Safety", "Caring", "Symptoms", "Admin Care", "Surveillance", "Teaching", "Advocacy" };
    private List<ChartSeries> _shiftSeries = new List<ChartSeries>();

    private ChartOptions _shiftOptions = new ChartOptions
    {
        YAxisTicks = 10,
        YAxisFormat = "0'%'",
        MaxNumYAxisTicks = 6
    };

    // Data for the Key Drivers Table
    private class NursingDriver
    {
        public string Outcome { get; set; } = string.Empty;
        public string Domain { get; set; } = string.Empty;
        public string Correlation { get; set; } = string.Empty;
        public Color CorrelationColor { get; set; }
    }

    private NursingDriver[] _drivers = new NursingDriver[]
    {
        new NursingDriver { Outcome = "Improved Symptom Management", Domain = "3. Assess & Manage Symptoms", Correlation = "High", CorrelationColor = Color.Success },
        new NursingDriver { Outcome = "Lower 30-Day Readmissions", Domain = "6. Teach Patients & Families", Correlation = "High", CorrelationColor = Color.Success },
        new NursingDriver { Outcome = "Higher Patient Safety Scores", Domain = "5. Provide Surveillance & Intervene", Correlation = "Medium", CorrelationColor = Color.Info },
        new NursingDriver { Outcome = "Better HCAHPS Communication Scores", Domain = "2. Build Caring Relationships", Correlation = "High", CorrelationColor = Color.Success },
        new NursingDriver { Outcome = "Reduced Length of Stay", Domain = "7. Collaborate with Team", Correlation = "Medium", CorrelationColor = Color.Info }
    };

    protected override void OnInitialized()
    {
        InitializeChartData();
    }

    private void InitializeChartData()
    {
        // Initialize domain chart data using InputData/InputLabels approach
        _domainData = new double[] { 28, 22, 18, 15, 10, 7 };
        _domainLabels = new string[] { "Symptoms", "Admin Care", "Surveillance", "Caring", "Teaching", "Other" };

        // Initialize shift chart data using ChartSeries approach (works for bar charts)
        _shiftSeries = new List<ChartSeries>
        {
            new ChartSeries { Name = "Day Shift", Data = new double[] { 12, 16, 30, 25, 15, 12, 6 } },
            new ChartSeries { Name = "Night Shift", Data = new double[] { 15, 12, 25, 18, 28, 5, 4 } }
        };
    }
}
